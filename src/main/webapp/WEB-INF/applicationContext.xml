<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--<context:component-scan base-package="org.mybatis.jpetstore.service" />-->
    <context:annotation-config />  
    <bean id="orderService" class="com.byd.test.services.OrderService" lazy-init="true">
        <!--<property name="scheduler" ref="schedulerFactory" />-->
    </bean>
    <bean id="myThread" class="com.byd.test.services.MyThread" lazy-init="true"></bean>
    
    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.byd.test.domain" />
        <!--<property name="configLocation">-->
        <!--<property name="mapperLocations" value="classpath*:com/byd/test/mapper/*.xml" />-->
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.byd.test.mapper" />
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@10.9.23.153:1521:bpsdb" />
        <property name="username" value="wlmis" />
        <property name="password" value="wlmis" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
<!--    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>-->
<!--    <aop:config>
        <aop:pointcut id="os" expression="execution(* com.byd.test.services.OrderService.*(..))"/>
        <aop:advisor advice-ref="exAdvice" pointcut-ref="os" />
    </aop:config>-->
    
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />
    
  <!--触发器配置如下-->
    <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 添加触发器 -->
        <property name="triggers">
            <list>
                <ref bean="dispatchingBillCreatorTrigger"/>
            </list>
        </property>
        <property name="autoStartup" value="false"/>  
        <property name="quartzProperties">  
            <props>  
                <prop key="org.quartz.threadPool.threadCount">1</prop>  
            </props>  
        </property>
    </bean>
    <bean id="dispatchingBillCreatorTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"  lazy-init="true">
        <property name="jobDetail" ref="dispatchingBillCreatorJobDetail"/>
        <property name="startDelay" value="6000" />
        <property name="cronExpression">   
            <value>0/15 * * * * ?</value>   
        </property> 
    </bean>
    <bean id="dispatchingBillCreatorJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" lazy-init="true">
        <property name="targetObject" ref="orderService" />
        <property name="targetMethod"  value="quartz"/>
        <property name="concurrent" value="false"/>
    </bean>
</beans>
